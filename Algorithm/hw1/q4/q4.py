#!/usr/bin/env python
# coding=utf-8
'''
@Author: Jin X
@Date: 2020-02-06 21:50:42
@LastEditTime : 2020-02-10 21:53:28
'''
from time import perf_counter


def farthestPair(data):
    min = max = data[0]
    for val in data:        # find the current max and current min
        if val < min:
            min = val
        if val > max:
            max = val
    # diff = max - min
    return [min, max]


if __name__ == '__main__':
    '''
    Runtest
    Test data is generated by np.random.randint(low,high,len)
    it returns a list with size of len, each val is random
    and the boundary is [low,high]
    '''
    sizes = [128, 512, 1024, 4096,  8192, 16384, 32768, 65536]
    for size in sizes:
        a = []
        with open('./data/{}int.txt'.format(size), 'r') as f:
            for line in f.readlines():
                a.append(int(line))
        print('{:5d}'.format(size), end=' ')
        tstart = perf_counter()
        print('farthest pair is {}'.format(farthestPair(a)), end=' ')
        tend = perf_counter()
        print('takes {:.2f} ms'.format(1000 * (tend - tstart)))

    ###############################################################
    '''
    Entry for a single file
    Input: change the file path below
    Output: print out the farthest pair it found and the runtime
    '''
    # a = []
    # with open('./data/512int.txt', 'r') as f:
    #     for line in f.readlines():
    #             a.append(int(line))
    # tstart = perf_counter()
    # print('farthest pair is {}'.format(farthestPair(a)), end=' ')
    # tend = perf_counter()
    # print('takes {:.2f} ms'.format(1000 * (tend - tstart)))
